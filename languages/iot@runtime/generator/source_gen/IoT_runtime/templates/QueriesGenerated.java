package IoT_runtime.templates;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.impl.query.QueryProviderBase;
import jetbrains.mps.generator.template.BaseMappingRuleContext;
import java.util.Objects;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.generator.template.PropertyMacroContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SEnumOperations;
import jetbrains.mps.generator.template.IfMacroContext;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodeContext;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import java.util.Map;
import jetbrains.mps.generator.impl.query.ReductionRuleCondition;
import java.util.HashMap;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.impl.query.QueryKey;
import jetbrains.mps.generator.template.ReductionRuleQueryContext;
import jetbrains.mps.generator.impl.GenerationFailureException;
import jetbrains.mps.generator.impl.query.SourceNodeQuery;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.generator.impl.query.SourceNodesQuery;
import java.util.Collection;
import jetbrains.mps.util.IterableUtil;
import jetbrains.mps.generator.impl.query.PropertyValueQuery;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.generator.impl.query.IfMacroCondition;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SConcept;

@Generated
public class QueriesGenerated extends QueryProviderBase {
  public QueriesGenerated() {
    super(1);
  }
  public static boolean rule_Condition_3_0(final BaseMappingRuleContext _context) {
    return Objects.equals(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.metric$vNf_), PROPS.name$MnvL), "Unavailability");
  }
  public static boolean rule_Condition_3_1(final BaseMappingRuleContext _context) {
    return Objects.equals(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.metric$vNf_), PROPS.name$MnvL), "CPU consumption");
  }
  public static boolean rule_Condition_3_2(final BaseMappingRuleContext _context) {
    return Objects.equals(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.metric$vNf_), PROPS.name$MnvL), "Ram memory consumption");
  }
  public static boolean rule_Condition_3_3(final BaseMappingRuleContext _context) {
    return Objects.equals(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.metric$vNf_), PROPS.name$MnvL), "Network throughput in") || Objects.equals(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.metric$vNf_), PROPS.name$MnvL), "Network throughput out");
  }
  public static boolean rule_Condition_3_4(final BaseMappingRuleContext _context) {
    return Objects.equals(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.metric$vNf_), PROPS.name$MnvL), "Used disk space");
  }
  public static Object propertyMacro_GetValue_0_0(final PropertyMacroContext _context) {
    return String.valueOf(Math.random());
  }
  public static Object propertyMacro_GetValue_0_1(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.container$lMjP), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_0_2(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.container$lMjP), LINKS.application$GqFB), PROPS.imageRepo$cH0I);
  }
  public static Object propertyMacro_GetValue_0_3(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.container$lMjP), LINKS.application$GqFB), PROPS.memoryRequired$4bvj));
  }
  public static Object propertyMacro_GetValue_0_4(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.container$lMjP), LINKS.application$GqFB), PROPS.cpuRequired$1FHE));
  }
  public static Object propertyMacro_GetValue_0_5(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.node$Oeii), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_0_6(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.region$yC9l), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_0_7(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.cluster$OdYU), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_0_8(final PropertyMacroContext _context) {
    return "test";
  }
  public static Object propertyMacro_GetValue_0_9(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SNodeOperations.getNodeAncestor(SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.device$mEs3), LINKS.topic$UImR), CONCEPTS.Container$SX, false, false), CONCEPTS.Node$uW, false, false), PROPS.ipAddress$iFdh);
  }
  public static Object propertyMacro_GetValue_0_10(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.device$mEs3), LINKS.topic$UImR), CONCEPTS.Container$SX, false, false), LINKS.application$GqFB), PROPS.nodePort$M0My));
  }
  public static Object propertyMacro_GetValue_0_11(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.device$mEs3), LINKS.topic$UImR), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_0_12(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.message$R4rK);
  }
  public static Object propertyMacro_GetValue_0_13(final PropertyMacroContext _context) {
    return String.valueOf(Math.random());
  }
  public static Object propertyMacro_GetValue_0_14(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(_context.getNode(), PROPS.instances$O6HU));
  }
  public static Object propertyMacro_GetValue_0_15(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.application$O7bW), PROPS.imageRepo$cH0I);
  }
  public static Object propertyMacro_GetValue_0_16(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.application$O7bW), PROPS.memoryRequired$4bvj));
  }
  public static Object propertyMacro_GetValue_0_17(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.application$O7bW), PROPS.cpuRequired$1FHE));
  }
  public static Object propertyMacro_GetValue_0_18(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.node$Oeii), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_0_19(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.region$yC9l), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_0_20(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.cluster$OdYU), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_0_21(final PropertyMacroContext _context) {
    return String.valueOf(Math.random());
  }
  public static Object propertyMacro_GetValue_0_22(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.container$37yL), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_0_23(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.sensor$VzrU), LINKS.topic$UImR), PROPS.name$MnvL).replace('/', '_');
  }
  public static Object propertyMacro_GetValue_0_24(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.value$pYm);
  }
  public static Object propertyMacro_GetValue_0_25(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.node$W9eU), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_0_26(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.container$4wEU), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_0_27(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(_context.getNode(), PROPS.value$jgCM));
  }
  public static Object propertyMacro_GetValue_0_28(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getString(_context.getNode(), PROPS.value$ENN8));
  }
  public static Object propertyMacro_GetValue_1_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_1_1(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.application$GqFB), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_1_2(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_1_3(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.application$GqFB), PROPS.imageRepo$cH0I);
  }
  public static Object propertyMacro_GetValue_1_4(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(_context.getNode(), PROPS.memoryLimit$Pi9U));
  }
  public static Object propertyMacro_GetValue_1_5(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(_context.getNode(), PROPS.cpuLimit$PhFS));
  }
  public static Object propertyMacro_GetValue_1_6(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.application$GqFB), PROPS.memoryRequired$4bvj));
  }
  public static Object propertyMacro_GetValue_1_7(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.application$GqFB), PROPS.cpuRequired$1FHE));
  }
  public static Object propertyMacro_GetValue_1_8(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.application$GqFB), PROPS.port$LUG8));
  }
  public static Object propertyMacro_GetValue_1_9(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_1_10(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.mountPath$eTSu);
  }
  public static Object propertyMacro_GetValue_1_11(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.subPath$eZhP);
  }
  public static Object propertyMacro_GetValue_1_12(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_1_13(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_1_14(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SNodeOperations.getNodeAncestor(_context.getNode(), CONCEPTS.Node$uW, false, false), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_2_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_2_1(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_2_2(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(_context.getNode(), LINKS.period$OL5J), PROPS.value$h$DU));
  }
  public static Object propertyMacro_GetValue_2_3(final PropertyMacroContext _context) {
    return SEnumOperations.getMemberName0(SPropertyOperations.getEnum(SLinkOperations.getTarget(_context.getNode(), LINKS.period$OL5J), PROPS.unit$h_7W));
  }
  public static Object propertyMacro_GetValue_2_4(final PropertyMacroContext _context) {
    if (SPropertyOperations.getBoolean(_context.getNode(), PROPS.allActions$UlBc) == true) {
      return "all";
    }
    return String.valueOf(SPropertyOperations.getInteger(_context.getNode(), PROPS.actionsQuantity$UlQd));
  }
  public static Object propertyMacro_GetValue_4_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(_context.getNode(), LINKS.container$ktVU), CONCEPTS.Node$uW, false, false), PROPS.ipAddress$iFdh);
  }
  public static Object propertyMacro_GetValue_4_1(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), LINKS.container$ktVU), LINKS.application$GqFB), PROPS.nodePort$M0My));
  }
  public static Object propertyMacro_GetValue_4_2(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL).replace("/", "_");
  }
  public static Object propertyMacro_GetValue_4_3(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_4_4(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_4_5(final PropertyMacroContext _context) {
    return "mqtt-exporter/config-map-".concat(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.container$ktVU), PROPS.name$MnvL));
  }
  public static Object propertyMacro_GetValue_5_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_5_1(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_5_2(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(_context.getNode(), PROPS.port$LUG8));
  }
  public static Object propertyMacro_GetValue_5_3(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(_context.getNode(), PROPS.port$LUG8));
  }
  public static Object propertyMacro_GetValue_5_4(final PropertyMacroContext _context) {
    return String.valueOf(SPropertyOperations.getInteger(_context.getNode(), PROPS.nodePort$M0My));
  }
  public static Object propertyMacro_GetValue_6_0(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.name$MnvL);
  }
  public static Object propertyMacro_GetValue_6_1(final PropertyMacroContext _context) {
    return SPropertyOperations.getString(_context.getNode(), PROPS.subPath$eZhP);
  }
  public static boolean ifMacro_Condition_0_0(final IfMacroContext _context) {
    return (Integer) _context.getVariable("loop:index") < SNodeOperations.getAllSiblings(_context.getNode(), false).size();
  }
  public static boolean ifMacro_Condition_0_1(final IfMacroContext _context) {
    return (Integer) _context.getVariable("loop:index") < SNodeOperations.getAllSiblings(_context.getNode(), false).size();
  }
  public static boolean ifMacro_Condition_0_2(final IfMacroContext _context) {
    return (Integer) _context.getVariable("loop:index") < SNodeOperations.getAllSiblings(_context.getNode(), false).size();
  }
  public static boolean ifMacro_Condition_0_3(final IfMacroContext _context) {
    return SNodeOperations.getNextSibling(_context.getNode()) != null;
  }
  public static boolean ifMacro_Condition_0_4(final IfMacroContext _context) {
    return SNodeOperations.getNextSibling(_context.getNode()) != null;
  }
  public static boolean ifMacro_Condition_0_5(final IfMacroContext _context) {
    return (Integer) _context.getVariable("loop:index") < SNodeOperations.getAllSiblings(_context.getNode(), false).size();
  }
  public static boolean ifMacro_Condition_0_6(final IfMacroContext _context) {
    return (Integer) _context.getVariable("loop:index") < SNodeOperations.getAllSiblings(_context.getNode(), false).size();
  }
  public static boolean ifMacro_Condition_0_7(final IfMacroContext _context) {
    return (Integer) _context.getVariable("loop:index") < SNodeOperations.getAllSiblings(_context.getNode(), false).size();
  }
  public static boolean ifMacro_Condition_0_8(final IfMacroContext _context) {
    return SNodeOperations.getNextSibling(_context.getNode()) != null;
  }
  public static boolean ifMacro_Condition_0_9(final IfMacroContext _context) {
    return SNodeOperations.getNextSibling(_context.getNode()) != null;
  }
  public static boolean ifMacro_Condition_1_0(final IfMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), PROPS.memoryLimit$Pi9U) != 0 || SPropertyOperations.getInteger(_context.getNode(), PROPS.cpuLimit$PhFS) != 0;
  }
  public static boolean ifMacro_Condition_1_1(final IfMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), PROPS.memoryLimit$Pi9U) != 0;
  }
  public static boolean ifMacro_Condition_1_2(final IfMacroContext _context) {
    return SPropertyOperations.getInteger(_context.getNode(), PROPS.cpuLimit$PhFS) != 0;
  }
  public static boolean ifMacro_Condition_1_3(final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.volumes$EF4i)).isNotEmpty();
  }
  public static boolean ifMacro_Condition_1_4(final IfMacroContext _context) {
    return isNotEmptyString(SPropertyOperations.getString(_context.getNode(), PROPS.subPath$eZhP));
  }
  public static boolean ifMacro_Condition_1_5(final IfMacroContext _context) {
    return ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(), LINKS.volumes$EF4i)).isNotEmpty();
  }
  public static boolean ifMacro_Condition_1_6(final IfMacroContext _context) {
    return isEmptyString(SPropertyOperations.getString(_context.getNode(), PROPS.subPath$eZhP));
  }
  public static boolean ifMacro_Condition_3_0(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.expr$bjkt), CONCEPTS.Exp_Node$_M);
  }
  public static boolean ifMacro_Condition_3_1(final IfMacroContext _context) {
    return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(), LINKS.expr$bjkt), CONCEPTS.Exp_Cont$kE);
  }
  public static boolean ifMacro_Condition_3_2(final IfMacroContext _context) {
    return Objects.equals(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.metric$vNf_), PROPS.name$MnvL), "Network_throughput_in");
  }
  public static boolean ifMacro_Condition_3_3(final IfMacroContext _context) {
    return Objects.equals(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(), LINKS.metric$vNf_), PROPS.name$MnvL), "Network_throughput_out");
  }
  public static boolean ifMacro_Condition_6_0(final IfMacroContext _context) {
    return isNotEmptyString(SPropertyOperations.getString(_context.getNode(), PROPS.subPath$eZhP));
  }
  public static SNode sourceNodeQuery_0_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.leftExpression$sEj);
  }
  public static SNode sourceNodeQuery_0_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.rightExpression$nvX);
  }
  public static SNode sourceNodeQuery_0_2(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.leftExpression$sEj);
  }
  public static SNode sourceNodeQuery_0_3(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.rightExpression$nvX);
  }
  public static SNode sourceNodeQuery_0_4(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.leftExpression$sEj);
  }
  public static SNode sourceNodeQuery_0_5(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.rightExpression$nvX);
  }
  public static SNode sourceNodeQuery_0_6(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.leftExpression$sEj);
  }
  public static SNode sourceNodeQuery_0_7(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.rightExpression$nvX);
  }
  public static SNode sourceNodeQuery_0_8(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.leftExpression$sEj);
  }
  public static SNode sourceNodeQuery_0_9(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.rightExpression$nvX);
  }
  public static SNode sourceNodeQuery_2_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.condition$tiIQ);
  }
  public static SNode sourceNodeQuery_3_0(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$bjkt);
  }
  public static SNode sourceNodeQuery_3_1(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$bjkt);
  }
  public static SNode sourceNodeQuery_3_2(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$bjkt);
  }
  public static SNode sourceNodeQuery_3_3(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$bjkt);
  }
  public static SNode sourceNodeQuery_3_4(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$bjkt);
  }
  public static SNode sourceNodeQuery_3_5(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$bjkt);
  }
  public static SNode sourceNodeQuery_3_6(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$bjkt);
  }
  public static SNode sourceNodeQuery_3_7(final SourceSubstituteMacroNodeContext _context) {
    return SLinkOperations.getTarget(_context.getNode(), LINKS.expr$bjkt);
  }
  public static Iterable<SNode> sourceNodesQuery_0_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.targetNode$9oco);
  }
  public static Iterable<SNode> sourceNodesQuery_0_1(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.targetRegion$9vtR);
  }
  public static Iterable<SNode> sourceNodesQuery_0_2(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.targetCluster$9wRX);
  }
  public static Iterable<SNode> sourceNodesQuery_0_3(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.targetNodes$VPZT);
  }
  public static Iterable<SNode> sourceNodesQuery_0_4(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.targetRegion$VQGW);
  }
  public static Iterable<SNode> sourceNodesQuery_0_5(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.targetCluster$VW$l);
  }
  public static Iterable<SNode> sourceNodesQuery_1_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.volumes$EF4i);
  }
  public static Iterable<SNode> sourceNodesQuery_1_1(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.volumes$EF4i);
  }
  public static Iterable<SNode> sourceNodesQuery_1_2(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.nodes$XHTE);
  }
  public static Iterable<SNode> sourceNodesQuery_1_3(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.containers$eu$n);
  }
  public static Iterable<SNode> sourceNodesQuery_2_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.actions$Umzg);
  }
  public static Iterable<SNode> sourceNodesQuery_2_1(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.adaptationRules$mbiQ);
  }
  public static Iterable<SNode> sourceNodesQuery_4_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getNode(), LINKS.container$ktVU), LINKS.topics$Q2I_);
  }
  public static Iterable<SNode> sourceNodesQuery_5_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.getChildren(_context.getNode(), LINKS.applications$1$I6);
  }
  public static Iterable<SNode> sourceNodesQuery_6_0(final SourceSubstituteMacroNodesContext _context) {
    return SLinkOperations.collectMany(SLinkOperations.collectMany(SLinkOperations.getChildren(_context.getNode(), LINKS.nodes$XHTE), LINKS.containers$eu$n), LINKS.volumes$EF4i);
  }
  private final Map<String, ReductionRuleCondition> rrcMethods = new HashMap<String, ReductionRuleCondition>();
  {
    int i = 0;
    rrcMethods.put("999840695445608205", new RRC(i++));
    rrcMethods.put("999840695445794797", new RRC(i++));
    rrcMethods.put("999840695445865947", new RRC(i++));
    rrcMethods.put("999840695445876136", new RRC(i++));
    rrcMethods.put("6313570324824852171", new RRC(i++));
  }
  @Override
  @NotNull
  public ReductionRuleCondition getReductionRuleCondition(@NotNull QueryKey identity) {
    ReductionRuleCondition query = identity.forTemplateNode(rrcMethods);
    return (query != null ? query : super.getReductionRuleCondition(identity));
  }
  private static class RRC implements ReductionRuleCondition {
    private final int methodKey;
    public RRC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(ReductionRuleQueryContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.rule_Condition_3_0(ctx);
        case 1:
          return QueriesGenerated.rule_Condition_3_1(ctx);
        case 2:
          return QueriesGenerated.rule_Condition_3_2(ctx);
        case 3:
          return QueriesGenerated.rule_Condition_3_3(ctx);
        case 4:
          return QueriesGenerated.rule_Condition_3_4(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for rule %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, SourceNodeQuery> snqMethods = new HashMap<String, SourceNodeQuery>();
  {
    int i = 0;
    snqMethods.put("8817320581415273780", new SNQ(i++));
    snqMethods.put("8817320581415274397", new SNQ(i++));
    snqMethods.put("4074468789326995675", new SNQ(i++));
    snqMethods.put("8817320581415181045", new SNQ(i++));
    snqMethods.put("6313570324824707550", new SNQ(i++));
    snqMethods.put("6313570324824707877", new SNQ(i++));
    snqMethods.put("6313570324824794360", new SNQ(i++));
    snqMethods.put("6313570324824794033", new SNQ(i++));
    snqMethods.put("6313570324824790853", new SNQ(i++));
    snqMethods.put("6313570324824791172", new SNQ(i++));
    snqMethods.put("6150920026292949748", new SNQ(i++));
    snqMethods.put("6883678459166739538", new SNQ(i++));
    snqMethods.put("999840695445806938", new SNQ(i++));
    snqMethods.put("999840695446027338", new SNQ(i++));
    snqMethods.put("8510706739519159851", new SNQ(i++));
    snqMethods.put("999840695445874958", new SNQ(i++));
    snqMethods.put("999840695445893507", new SNQ(i++));
    snqMethods.put("6313570324824863050", new SNQ(i++));
    snqMethods.put("6313570324824863690", new SNQ(i++));
  }
  @NotNull
  @Override
  public SourceNodeQuery getSourceNodeQuery(@NotNull QueryKey identity) {
    SourceNodeQuery query = identity.forFunctionNode(snqMethods);
    return (query != null ? query : super.getSourceNodeQuery(identity));
  }
  private static class SNQ implements SourceNodeQuery {
    private final int methodKey;
    public SNQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @Nullable
    public SNode evaluate(@NotNull SourceSubstituteMacroNodeContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.sourceNodeQuery_0_0(ctx);
        case 1:
          return QueriesGenerated.sourceNodeQuery_0_1(ctx);
        case 2:
          return QueriesGenerated.sourceNodeQuery_0_2(ctx);
        case 3:
          return QueriesGenerated.sourceNodeQuery_0_3(ctx);
        case 4:
          return QueriesGenerated.sourceNodeQuery_0_4(ctx);
        case 5:
          return QueriesGenerated.sourceNodeQuery_0_5(ctx);
        case 6:
          return QueriesGenerated.sourceNodeQuery_0_6(ctx);
        case 7:
          return QueriesGenerated.sourceNodeQuery_0_7(ctx);
        case 8:
          return QueriesGenerated.sourceNodeQuery_0_8(ctx);
        case 9:
          return QueriesGenerated.sourceNodeQuery_0_9(ctx);
        case 10:
          return QueriesGenerated.sourceNodeQuery_2_0(ctx);
        case 11:
          return QueriesGenerated.sourceNodeQuery_3_0(ctx);
        case 12:
          return QueriesGenerated.sourceNodeQuery_3_1(ctx);
        case 13:
          return QueriesGenerated.sourceNodeQuery_3_2(ctx);
        case 14:
          return QueriesGenerated.sourceNodeQuery_3_3(ctx);
        case 15:
          return QueriesGenerated.sourceNodeQuery_3_4(ctx);
        case 16:
          return QueriesGenerated.sourceNodeQuery_3_5(ctx);
        case 17:
          return QueriesGenerated.sourceNodeQuery_3_6(ctx);
        case 18:
          return QueriesGenerated.sourceNodeQuery_3_7(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, SourceNodesQuery> snsqMethods = new HashMap<String, SourceNodesQuery>();
  {
    int i = 0;
    snsqMethods.put("793586359563113314", new SNsQ(i++));
    snsqMethods.put("793586359563132866", new SNsQ(i++));
    snsqMethods.put("793586359563150318", new SNsQ(i++));
    snsqMethods.put("1186498914992871472", new SNsQ(i++));
    snsqMethods.put("1186498914993134557", new SNsQ(i++));
    snsqMethods.put("1186498914993174145", new SNsQ(i++));
    snsqMethods.put("9061738871699665009", new SNsQ(i++));
    snsqMethods.put("9061738871699757242", new SNsQ(i++));
    snsqMethods.put("8692323605774933609", new SNsQ(i++));
    snsqMethods.put("8692323605774936611", new SNsQ(i++));
    snsqMethods.put("6150920026293867699", new SNsQ(i++));
    snsqMethods.put("525583430364641246", new SNsQ(i++));
    snsqMethods.put("8817320581416498306", new SNsQ(i++));
    snsqMethods.put("8817320581416753680", new SNsQ(i++));
    snsqMethods.put("2158116648752970354", new SNsQ(i++));
  }
  @NotNull
  @Override
  public SourceNodesQuery getSourceNodesQuery(@NotNull QueryKey identity) {
    SourceNodesQuery query = identity.forFunctionNode(snsqMethods);
    return (query != null ? query : super.getSourceNodesQuery(identity));
  }
  private static class SNsQ implements SourceNodesQuery {
    private final int methodKey;
    public SNsQ(int methodKey) {
      this.methodKey = methodKey;
    }
    @NotNull
    public Collection<SNode> evaluate(@NotNull SourceSubstituteMacroNodesContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_0_0(ctx));
        case 1:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_0_1(ctx));
        case 2:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_0_2(ctx));
        case 3:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_0_3(ctx));
        case 4:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_0_4(ctx));
        case 5:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_0_5(ctx));
        case 6:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_0(ctx));
        case 7:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_1(ctx));
        case 8:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_2(ctx));
        case 9:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_1_3(ctx));
        case 10:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_2_0(ctx));
        case 11:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_2_1(ctx));
        case 12:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_4_0(ctx));
        case 13:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_5_0(ctx));
        case 14:
          return IterableUtil.asCollection(QueriesGenerated.sourceNodesQuery_6_0(ctx));
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, PropertyValueQuery> pvqMethods = new HashMap<String, PropertyValueQuery>();
  {
    int i = 0;
    pvqMethods.put("525583430363745246", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "id"));
    pvqMethods.put("793586359563079286", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "pod_name"));
    pvqMethods.put("793586359563083533", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "image"));
    pvqMethods.put("793586359563089951", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "mem"));
    pvqMethods.put("793586359563103580", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "cpu"));
    pvqMethods.put("793586359563114472", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "node"));
    pvqMethods.put("793586359563133957", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "region"));
    pvqMethods.put("793586359563964953", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "cluster"));
    pvqMethods.put("525583430363625145", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "id"));
    pvqMethods.put("1186498914993805333", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "ip"));
    pvqMethods.put("3242290259276191800", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "port"));
    pvqMethods.put("1186498914993812412", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "topic"));
    pvqMethods.put("1186498914993817087", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "msg"));
    pvqMethods.put("525583430363734971", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "id"));
    pvqMethods.put("1186498914990897909", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "instances"));
    pvqMethods.put("1186498914990932916", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "image"));
    pvqMethods.put("1186498914991002804", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "mem"));
    pvqMethods.put("1186498914991026804", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "cpu"));
    pvqMethods.put("1186498914992872272", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "node"));
    pvqMethods.put("1186498914993135087", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "region"));
    pvqMethods.put("1186498914993174796", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "cluster"));
    pvqMethods.put("525583430363745891", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "id"));
    pvqMethods.put("793586359563161761", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "pod_name"));
    pvqMethods.put("8817320581414332165", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "topic"));
    pvqMethods.put("2223746026164764570", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "value"));
    pvqMethods.put("4074468789330297541", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "node"));
    pvqMethods.put("6883678459168292405", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "container"));
    pvqMethods.put("6313570324824679487", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "int_constant"));
    pvqMethods.put("8817320581415334182", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "float_constant"));
    pvqMethods.put("8692323605774937925", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "cname"));
    pvqMethods.put("8692323605774949877", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "appname"));
    pvqMethods.put("8692323605774982301", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "cname"));
    pvqMethods.put("8692323605774985487", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "image"));
    pvqMethods.put("3242290259273326371", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "memory"));
    pvqMethods.put("3242290259273334067", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "cpu"));
    pvqMethods.put("3242290259273367055", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "memory"));
    pvqMethods.put("3242290259273418682", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "cpu"));
    pvqMethods.put("2158116648750179366", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "80"));
    pvqMethods.put("9061738871699667344", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "name"));
    pvqMethods.put("9061738871699677386", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "path"));
    pvqMethods.put("9061738871699697716", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "path"));
    pvqMethods.put("9061738871699762734", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "name"));
    pvqMethods.put("9061738871699784031", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "name"));
    pvqMethods.put("2158116648749865855", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "node_name"));
    pvqMethods.put("525583430364654475", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "rule"));
    pvqMethods.put("7051160158907374722", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "alert-name"));
    pvqMethods.put("8692323605776970858", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "period"));
    pvqMethods.put("8692323605777113902", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "unit"));
    pvqMethods.put("8692323605777127134", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "actions"));
    pvqMethods.put("8817320581415857495", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "ip"));
    pvqMethods.put("8817320581415866817", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "port"));
    pvqMethods.put("8817320581416424889", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "topic"));
    pvqMethods.put("8817320581416518771", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "topic"));
    pvqMethods.put("8817320581416524577", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "topic"));
    pvqMethods.put("8817320581415721252", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "mqtt-exporter/config-map"));
    pvqMethods.put("8692323605775047438", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "app"));
    pvqMethods.put("8692323605775052424", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "app"));
    pvqMethods.put("8817320581416768464", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "port"));
    pvqMethods.put("8817320581416791641", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "port"));
    pvqMethods.put("8817320581416803420", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "nodePort"));
    pvqMethods.put("2158116648753002863", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "name"));
    pvqMethods.put("2158116648753005954", new PVQ(i++, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "subpath"));
  }
  @NotNull
  @Override
  public PropertyValueQuery getPropertyValueQuery(@NotNull QueryKey identity) {
    PropertyValueQuery query = identity.forTemplateNode(pvqMethods);
    return (query != null ? query : super.getPropertyValueQuery(identity));
  }
  private static class PVQ extends PropertyValueQuery.Base {
    private final int methodKey;
    /*package*/ PVQ(int methodKey, SProperty property, String templateValue) {
      super(property, templateValue);
      this.methodKey = methodKey;
    }
    @Nullable
    public Object evaluate(@NotNull PropertyMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.propertyMacro_GetValue_0_0(ctx);
        case 1:
          return QueriesGenerated.propertyMacro_GetValue_0_1(ctx);
        case 2:
          return QueriesGenerated.propertyMacro_GetValue_0_2(ctx);
        case 3:
          return QueriesGenerated.propertyMacro_GetValue_0_3(ctx);
        case 4:
          return QueriesGenerated.propertyMacro_GetValue_0_4(ctx);
        case 5:
          return QueriesGenerated.propertyMacro_GetValue_0_5(ctx);
        case 6:
          return QueriesGenerated.propertyMacro_GetValue_0_6(ctx);
        case 7:
          return QueriesGenerated.propertyMacro_GetValue_0_7(ctx);
        case 8:
          return QueriesGenerated.propertyMacro_GetValue_0_8(ctx);
        case 9:
          return QueriesGenerated.propertyMacro_GetValue_0_9(ctx);
        case 10:
          return QueriesGenerated.propertyMacro_GetValue_0_10(ctx);
        case 11:
          return QueriesGenerated.propertyMacro_GetValue_0_11(ctx);
        case 12:
          return QueriesGenerated.propertyMacro_GetValue_0_12(ctx);
        case 13:
          return QueriesGenerated.propertyMacro_GetValue_0_13(ctx);
        case 14:
          return QueriesGenerated.propertyMacro_GetValue_0_14(ctx);
        case 15:
          return QueriesGenerated.propertyMacro_GetValue_0_15(ctx);
        case 16:
          return QueriesGenerated.propertyMacro_GetValue_0_16(ctx);
        case 17:
          return QueriesGenerated.propertyMacro_GetValue_0_17(ctx);
        case 18:
          return QueriesGenerated.propertyMacro_GetValue_0_18(ctx);
        case 19:
          return QueriesGenerated.propertyMacro_GetValue_0_19(ctx);
        case 20:
          return QueriesGenerated.propertyMacro_GetValue_0_20(ctx);
        case 21:
          return QueriesGenerated.propertyMacro_GetValue_0_21(ctx);
        case 22:
          return QueriesGenerated.propertyMacro_GetValue_0_22(ctx);
        case 23:
          return QueriesGenerated.propertyMacro_GetValue_0_23(ctx);
        case 24:
          return QueriesGenerated.propertyMacro_GetValue_0_24(ctx);
        case 25:
          return QueriesGenerated.propertyMacro_GetValue_0_25(ctx);
        case 26:
          return QueriesGenerated.propertyMacro_GetValue_0_26(ctx);
        case 27:
          return QueriesGenerated.propertyMacro_GetValue_0_27(ctx);
        case 28:
          return QueriesGenerated.propertyMacro_GetValue_0_28(ctx);
        case 29:
          return QueriesGenerated.propertyMacro_GetValue_1_0(ctx);
        case 30:
          return QueriesGenerated.propertyMacro_GetValue_1_1(ctx);
        case 31:
          return QueriesGenerated.propertyMacro_GetValue_1_2(ctx);
        case 32:
          return QueriesGenerated.propertyMacro_GetValue_1_3(ctx);
        case 33:
          return QueriesGenerated.propertyMacro_GetValue_1_4(ctx);
        case 34:
          return QueriesGenerated.propertyMacro_GetValue_1_5(ctx);
        case 35:
          return QueriesGenerated.propertyMacro_GetValue_1_6(ctx);
        case 36:
          return QueriesGenerated.propertyMacro_GetValue_1_7(ctx);
        case 37:
          return QueriesGenerated.propertyMacro_GetValue_1_8(ctx);
        case 38:
          return QueriesGenerated.propertyMacro_GetValue_1_9(ctx);
        case 39:
          return QueriesGenerated.propertyMacro_GetValue_1_10(ctx);
        case 40:
          return QueriesGenerated.propertyMacro_GetValue_1_11(ctx);
        case 41:
          return QueriesGenerated.propertyMacro_GetValue_1_12(ctx);
        case 42:
          return QueriesGenerated.propertyMacro_GetValue_1_13(ctx);
        case 43:
          return QueriesGenerated.propertyMacro_GetValue_1_14(ctx);
        case 44:
          return QueriesGenerated.propertyMacro_GetValue_2_0(ctx);
        case 45:
          return QueriesGenerated.propertyMacro_GetValue_2_1(ctx);
        case 46:
          return QueriesGenerated.propertyMacro_GetValue_2_2(ctx);
        case 47:
          return QueriesGenerated.propertyMacro_GetValue_2_3(ctx);
        case 48:
          return QueriesGenerated.propertyMacro_GetValue_2_4(ctx);
        case 49:
          return QueriesGenerated.propertyMacro_GetValue_4_0(ctx);
        case 50:
          return QueriesGenerated.propertyMacro_GetValue_4_1(ctx);
        case 51:
          return QueriesGenerated.propertyMacro_GetValue_4_2(ctx);
        case 52:
          return QueriesGenerated.propertyMacro_GetValue_4_3(ctx);
        case 53:
          return QueriesGenerated.propertyMacro_GetValue_4_4(ctx);
        case 54:
          return QueriesGenerated.propertyMacro_GetValue_4_5(ctx);
        case 55:
          return QueriesGenerated.propertyMacro_GetValue_5_0(ctx);
        case 56:
          return QueriesGenerated.propertyMacro_GetValue_5_1(ctx);
        case 57:
          return QueriesGenerated.propertyMacro_GetValue_5_2(ctx);
        case 58:
          return QueriesGenerated.propertyMacro_GetValue_5_3(ctx);
        case 59:
          return QueriesGenerated.propertyMacro_GetValue_5_4(ctx);
        case 60:
          return QueriesGenerated.propertyMacro_GetValue_6_0(ctx);
        case 61:
          return QueriesGenerated.propertyMacro_GetValue_6_1(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no method for query %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private final Map<String, IfMacroCondition> imcMethods = new HashMap<String, IfMacroCondition>();
  {
    int i = 0;
    imcMethods.put("1490801959943377928", new IfMC(i++));
    imcMethods.put("1490801959943347632", new IfMC(i++));
    imcMethods.put("1490801959943317701", new IfMC(i++));
    imcMethods.put("1490801959943719213", new IfMC(i++));
    imcMethods.put("1490801959943823693", new IfMC(i++));
    imcMethods.put("1490801959943175299", new IfMC(i++));
    imcMethods.put("1490801959943258950", new IfMC(i++));
    imcMethods.put("1490801959943287197", new IfMC(i++));
    imcMethods.put("1490801959943774618", new IfMC(i++));
    imcMethods.put("1490801959943871961", new IfMC(i++));
    imcMethods.put("8510706739515945901", new IfMC(i++));
    imcMethods.put("8510706739515982058", new IfMC(i++));
    imcMethods.put("8510706739515998153", new IfMC(i++));
    imcMethods.put("9061738871699471515", new IfMC(i++));
    imcMethods.put("3242290259270038605", new IfMC(i++));
    imcMethods.put("9061738871699710181", new IfMC(i++));
    imcMethods.put("9061738871699770543", new IfMC(i++));
    imcMethods.put("6883678459166853178", new IfMC(i++));
    imcMethods.put("6883678459166847548", new IfMC(i++));
    imcMethods.put("999840695445893481", new IfMC(i++));
    imcMethods.put("999840695445893493", new IfMC(i++));
    imcMethods.put("2158116648753013688", new IfMC(i++));
  }
  @NotNull
  @Override
  public IfMacroCondition getIfMacroCondition(@NotNull QueryKey identity) {
    IfMacroCondition query = identity.forTemplateNode(imcMethods);
    return (query != null ? query : super.getIfMacroCondition(identity));
  }
  private static class IfMC implements IfMacroCondition {
    private final int methodKey;
    public IfMC(int methodKey) {
      this.methodKey = methodKey;
    }
    @Override
    public boolean check(@NotNull IfMacroContext ctx) throws GenerationFailureException {
      switch (methodKey) {
        case 0:
          return QueriesGenerated.ifMacro_Condition_0_0(ctx);
        case 1:
          return QueriesGenerated.ifMacro_Condition_0_1(ctx);
        case 2:
          return QueriesGenerated.ifMacro_Condition_0_2(ctx);
        case 3:
          return QueriesGenerated.ifMacro_Condition_0_3(ctx);
        case 4:
          return QueriesGenerated.ifMacro_Condition_0_4(ctx);
        case 5:
          return QueriesGenerated.ifMacro_Condition_0_5(ctx);
        case 6:
          return QueriesGenerated.ifMacro_Condition_0_6(ctx);
        case 7:
          return QueriesGenerated.ifMacro_Condition_0_7(ctx);
        case 8:
          return QueriesGenerated.ifMacro_Condition_0_8(ctx);
        case 9:
          return QueriesGenerated.ifMacro_Condition_0_9(ctx);
        case 10:
          return QueriesGenerated.ifMacro_Condition_1_0(ctx);
        case 11:
          return QueriesGenerated.ifMacro_Condition_1_1(ctx);
        case 12:
          return QueriesGenerated.ifMacro_Condition_1_2(ctx);
        case 13:
          return QueriesGenerated.ifMacro_Condition_1_3(ctx);
        case 14:
          return QueriesGenerated.ifMacro_Condition_1_4(ctx);
        case 15:
          return QueriesGenerated.ifMacro_Condition_1_5(ctx);
        case 16:
          return QueriesGenerated.ifMacro_Condition_1_6(ctx);
        case 17:
          return QueriesGenerated.ifMacro_Condition_3_0(ctx);
        case 18:
          return QueriesGenerated.ifMacro_Condition_3_1(ctx);
        case 19:
          return QueriesGenerated.ifMacro_Condition_3_2(ctx);
        case 20:
          return QueriesGenerated.ifMacro_Condition_3_3(ctx);
        case 21:
          return QueriesGenerated.ifMacro_Condition_6_0(ctx);
        default:
          throw new GenerationFailureException(String.format("Inconsistent QueriesGenerated: there's no condition method for if macro %s (key: #%d)", ctx.getTemplateReference(), methodKey));
      }
    }
  }
  private static boolean isNotEmptyString(String str) {
    return str != null && str.length() > 0;
  }
  private static boolean isEmptyString(String str) {
    return str == null || str.isEmpty();
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink metric$vNf_ = MetaAdapterFactory.getReferenceLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0xcbb176aba3d9f94L, 0xcbb176aba5bcfdcL, "metric");
    /*package*/ static final SReferenceLink container$lMjP = MetaAdapterFactory.getReferenceLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x250b6e3f27339aeL, 0x250b6e3f27339c0L, "container");
    /*package*/ static final SReferenceLink application$GqFB = MetaAdapterFactory.getReferenceLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x330981c29fe0fb09L, 0x6175b41c53adc198L, "application");
    /*package*/ static final SReferenceLink node$Oeii = MetaAdapterFactory.getReferenceLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x11dabaab0c637009L, 0x11dabaab0c63700dL, "node");
    /*package*/ static final SReferenceLink region$yC9l = MetaAdapterFactory.getReferenceLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x424863e2f3693460L, 0x424863e2f369352dL, "region");
    /*package*/ static final SReferenceLink cluster$OdYU = MetaAdapterFactory.getReferenceLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x11dabaab0c63700aL, 0x11dabaab0c63700bL, "cluster");
    /*package*/ static final SReferenceLink device$mEs3 = MetaAdapterFactory.getReferenceLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0xde8316f4b5dd34dL, 0xde8316f4b5e23d2L, "device");
    /*package*/ static final SReferenceLink topic$UImR = MetaAdapterFactory.getReferenceLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x23381bd32c687594L, 0x624a077add4a2aabL, "topic");
    /*package*/ static final SReferenceLink application$O7bW = MetaAdapterFactory.getReferenceLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x11dabaab0c637001L, 0x11dabaab0c637004L, "application");
    /*package*/ static final SReferenceLink container$37yL = MetaAdapterFactory.getReferenceLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x11dabaab0c6371b7L, 0x11dabaab0c6371baL, "container");
    /*package*/ static final SReferenceLink sensor$VzrU = MetaAdapterFactory.getReferenceLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0xcbb176abacfab9fL, 0xcbb176abacfaba0L, "sensor");
    /*package*/ static final SReferenceLink node$W9eU = MetaAdapterFactory.getReferenceLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x5306924001c7aec1L, 0x5306924001c7aec2L, "node");
    /*package*/ static final SReferenceLink container$4wEU = MetaAdapterFactory.getReferenceLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x25ba6d72b2d8c740L, 0x25ba6d72b2d8c741L, "container");
    /*package*/ static final SContainmentLink period$OL5J = MetaAdapterFactory.getContainmentLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0xcbb176aba26b788L, 0x78a15643faf7ec95L, "period");
    /*package*/ static final SReferenceLink container$ktVU = MetaAdapterFactory.getReferenceLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x624a077add314f9fL, 0x624a077add314fa0L, "container");
    /*package*/ static final SContainmentLink volumes$EF4i = MetaAdapterFactory.getContainmentLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x330981c29fe0fb09L, 0x1df32ba8689de009L, "volumes");
    /*package*/ static final SContainmentLink expr$bjkt = MetaAdapterFactory.getContainmentLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0xcbb176aba3d9f94L, 0x5306924001a481e3L, "expr");
    /*package*/ static final SContainmentLink leftExpression$sEj = MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL, 0xfbdeb7a11cL, "leftExpression");
    /*package*/ static final SContainmentLink rightExpression$nvX = MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL, 0xfbdeb7a11bL, "rightExpression");
    /*package*/ static final SContainmentLink condition$tiIQ = MetaAdapterFactory.getContainmentLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0xcbb176aba26b788L, 0x4dd57832eb508e1aL, "condition");
    /*package*/ static final SContainmentLink targetNode$9oco = MetaAdapterFactory.getContainmentLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x250b6e3f27339aeL, 0x11dabaab0c637016L, "targetNode");
    /*package*/ static final SContainmentLink targetRegion$9vtR = MetaAdapterFactory.getContainmentLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x250b6e3f27339aeL, 0x11dabaab0c637020L, "targetRegion");
    /*package*/ static final SContainmentLink targetCluster$9wRX = MetaAdapterFactory.getContainmentLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x250b6e3f27339aeL, 0x11dabaab0c637026L, "targetCluster");
    /*package*/ static final SContainmentLink targetNodes$VPZT = MetaAdapterFactory.getContainmentLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x11dabaab0c637001L, 0x11dabaab0c637109L, "targetNodes");
    /*package*/ static final SContainmentLink targetRegion$VQGW = MetaAdapterFactory.getContainmentLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x11dabaab0c637001L, 0x11dabaab0c63710cL, "targetRegion");
    /*package*/ static final SContainmentLink targetCluster$VW$l = MetaAdapterFactory.getContainmentLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x11dabaab0c637001L, 0x11dabaab0c637110L, "targetCluster");
    /*package*/ static final SContainmentLink nodes$XHTE = MetaAdapterFactory.getContainmentLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x23381bd32c6857a2L, 0x6175b41c53adc0efL, "nodes");
    /*package*/ static final SContainmentLink containers$eu$n = MetaAdapterFactory.getContainmentLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x23381bd32c685983L, 0x6175b41c53adc168L, "containers");
    /*package*/ static final SContainmentLink actions$Umzg = MetaAdapterFactory.getContainmentLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0xcbb176aba26b788L, 0x4dd57832eb4298a0L, "actions");
    /*package*/ static final SContainmentLink adaptationRules$mbiQ = MetaAdapterFactory.getContainmentLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x23381bd32c6857a2L, 0xcbb176aba26bb98L, "adaptationRules");
    /*package*/ static final SContainmentLink topics$Q2I_ = MetaAdapterFactory.getContainmentLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x330981c29fe0fb09L, 0x624a077add31889fL, "topics");
    /*package*/ static final SContainmentLink applications$1$I6 = MetaAdapterFactory.getContainmentLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x23381bd32c6857a2L, 0x6175b41c53adc16fL, "applications");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
    /*package*/ static final SProperty imageRepo$cH0I = MetaAdapterFactory.getProperty(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x23381bd32c6857a6L, 0x330981c29fe0fb05L, "imageRepo");
    /*package*/ static final SProperty memoryRequired$4bvj = MetaAdapterFactory.getProperty(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x23381bd32c6857a6L, 0x6175b41c53adc180L, "memoryRequired");
    /*package*/ static final SProperty cpuRequired$1FHE = MetaAdapterFactory.getProperty(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x23381bd32c6857a6L, 0x6175b41c53adc177L, "cpuRequired");
    /*package*/ static final SProperty ipAddress$iFdh = MetaAdapterFactory.getProperty(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x23381bd32c685983L, 0x23381bd32c685986L, "ipAddress");
    /*package*/ static final SProperty nodePort$M0My = MetaAdapterFactory.getProperty(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x23381bd32c6857a6L, 0x624a077add07cc5fL, "nodePort");
    /*package*/ static final SProperty message$R4rK = MetaAdapterFactory.getProperty(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0xde8316f4b5dd34dL, 0xde8316f4b5efdfbL, "message");
    /*package*/ static final SProperty instances$O6HU = MetaAdapterFactory.getProperty(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x11dabaab0c637001L, 0x11dabaab0c637002L, "instances");
    /*package*/ static final SProperty value$pYm = MetaAdapterFactory.getProperty(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x1edc553a9815ad11L, 0x1edc553a9815ad24L, "value");
    /*package*/ static final SProperty value$jgCM = MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc59b314L, 0xf8cc59b315L, "value");
    /*package*/ static final SProperty value$ENN8 = MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102cb19a434L, 0x103245d193fL, "value");
    /*package*/ static final SProperty memoryLimit$Pi9U = MetaAdapterFactory.getProperty(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x330981c29fe0fb09L, 0x78a11bdb8b481cc0L, "memoryLimit");
    /*package*/ static final SProperty cpuLimit$PhFS = MetaAdapterFactory.getProperty(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x330981c29fe0fb09L, 0x78a11bdb8b481cbeL, "cpuLimit");
    /*package*/ static final SProperty port$LUG8 = MetaAdapterFactory.getProperty(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x23381bd32c6857a6L, 0x624a077add07cc5aL, "port");
    /*package*/ static final SProperty mountPath$eTSu = MetaAdapterFactory.getProperty(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x1df32ba8689ddf66L, 0x1df32ba8689ddf6bL, "mountPath");
    /*package*/ static final SProperty subPath$eZhP = MetaAdapterFactory.getProperty(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x1df32ba8689ddf66L, 0x1df32ba8689ddf6dL, "subPath");
    /*package*/ static final SProperty value$h$DU = MetaAdapterFactory.getProperty(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x78a15643faf7e388L, 0x78a15643faf7e389L, "value");
    /*package*/ static final SProperty unit$h_7W = MetaAdapterFactory.getProperty(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x78a15643faf7e388L, 0x78a15643faf7e38bL, "unit");
    /*package*/ static final SProperty allActions$UlBc = MetaAdapterFactory.getProperty(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0xcbb176aba26b788L, 0x4dd57832eb42989cL, "allActions");
    /*package*/ static final SProperty actionsQuantity$UlQd = MetaAdapterFactory.getProperty(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0xcbb176aba26b788L, 0x4dd57832eb42989dL, "actionsQuantity");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Container$SX = MetaAdapterFactory.getConcept(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x330981c29fe0fb09L, "IoT_runtime.structure.Container");
    /*package*/ static final SConcept Node$uW = MetaAdapterFactory.getConcept(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x23381bd32c685983L, "IoT_runtime.structure.Node");
    /*package*/ static final SConcept Exp_Node$_M = MetaAdapterFactory.getConcept(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x5306924001c7aec1L, "IoT_runtime.structure.Exp_Node");
    /*package*/ static final SConcept Exp_Cont$kE = MetaAdapterFactory.getConcept(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x25ba6d72b2d8c740L, "IoT_runtime.structure.Exp_Cont");
  }
}
